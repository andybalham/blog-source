{
  "StartAt": "FileReader",
  "States": {
    "FileReader": {
      "Next": "FileType",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "PublishFileReadError"
        }
      ],
      "Type": "Task",
      "ResultPath": "$.fileHeader",
      "Resource": "${Token[TOKEN.432]}",
      "Parameters": {
        "s3Key": "$.fileEvent.s3Key"
      }
    },
    "FileType": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.fileHeader.fileType",
          "StringEquals": "Configuration",
          "Next": "ReadScenarioHeaders"
        },
        {
          "Variable": "$.fileHeader.fileType",
          "StringEquals": "Scenario",
          "Next": "ReadConfigurationHeaders"
        }
      ],
      "Default": "PublishUnhandledFileTypeError"
    },
    "PublishUnhandledFileTypeError": {
      "Next": "UnhandledFileTypeFailure",
      "Type": "Task",
      "Resource": "arn:${Token[AWS.Partition.12]}:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${Token[TOKEN.497]}",
        "Message": {
          "cause": "Unhandled FileType",
          "fileHeader": "$.fileHeader"
        }
      }
    },
    "UnhandledFileTypeFailure": {
      "Type": "Fail",
      "Cause": "Unhandled FileType"
    },
    "ReadScenarioHeaders": {
      "Next": "CombineHeaders",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Type": "Task",
      "ResultPath": "$.scenarios",
      "Resource": "${Token[TOKEN.459]}",
      "Parameters": {
        "criteriaType": "FileType",
        "fileType": "Scenario"
      }
    },
    "CombineHeaders": {
      "Next": "CalculateResults",
      "Type": "Task",
      "ResultPath": "$.combinations",
      "Resource": "${Token[TOKEN.486]}"
    },
    "ReadConfigurationHeaders": {
      "Next": "CombineHeaders",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Type": "Task",
      "ResultPath": "$.configurations",
      "Resource": "${Token[TOKEN.459]}",
      "Parameters": {
        "criteriaType": "FileType",
        "fileType": "Configuration"
      }
    },
    "CalculateResults": {
      "Type": "Map",
      "End": true,
      "Iterator": {
        "StartAt": "CalculateResult",
        "States": {
          "CalculateResult": {
            "End": true,
            "Type": "Task",
            "Resource": "${Token[TOKEN.378]}"
          }
        }
      },
      "ItemsPath": "$.combinations"
    },
    "PublishFileReadError": {
      "Next": "FileReadErrorFailure",
      "Type": "Task",
      "Resource": "arn:${Token[AWS.Partition.12]}:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${Token[TOKEN.497]}",
        "Message": {
          "cause": "An error occurred reading the file",
          "fileEvent": "$.fileEvent"
        }
      }
    },
    "FileReadErrorFailure": {
      "Type": "Fail",
      "Cause": "An error occurred reading the file"
    }
  }
}